{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileInfo","props","profile","userId","src","className","styles","photo","s","descriptionBlock","photos","large","Preloader","Post","item","message","likesCount","MyPosts","React","memo","postsElements","posts","reverse","map","p","createRef","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","status","updateStatus","ProfileContainer","this","match","params","authorizedUserId","history","push","getUserProfile","setTimeout","getStatus","Component","compose","auth","isAuth","withRouter"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,iBAAmB,sCAAsC,MAAQ,6B,oBCAnFD,EAAOC,QAAU,CAAC,WAAa,4BAA4B,MAAQ,yB,oBCAnED,EAAOC,QAAU,CAAC,KAAO,qB,8HCkCVC,G,OA7BK,SAACC,GACjB,OAAKA,EAAMC,QAIkB,OAAzBD,EAAMC,QAAQC,OAEV,6BACI,yBACIC,IAAI,2FACJC,UAAWC,IAAOC,SAI1B,6BACI,yBAAKF,UAAWG,IAAEC,kBACd,yBAAKL,IAAKH,EAAMC,QAAQQ,OAAOC,UAdpC,kBAACC,EAAA,EAAD,Q,oDCOAC,EAZF,SAACZ,GACZ,OACE,yBAAKI,UAAWG,IAAEM,MAChB,yBAAKV,IAAI,4FACLH,EAAMc,QACN,6BACF,sCADE,IACkBd,EAAMe,c,kCCF5BC,EAAUC,IAAMC,MAAK,SAAAlB,GACvB,IAAImB,EACA,YAAInB,EAAMoB,OACLC,UACAC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAMT,QAASS,EAAET,QAASC,WAAYQ,EAAER,gBAErCE,IAAMO,YAM3B,OACI,yBAAKpB,UAAWG,IAAEkB,YACd,wCACA,kBAACC,EAAD,CAAqBC,SAPb,SAACC,GACb5B,EAAM6B,QAAQD,EAAOE,gBAOjB,yBAAK1B,UAAWG,IAAEa,OACbD,OAMXY,EAAYC,YAAiB,IAgB/BN,EAAoBO,YAAU,CAACC,KAAK,yBAAhBD,EAdH,SAACjC,GAClB,OACI,0BAAM2B,SAAU3B,EAAMmC,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,cAAcC,UAAWC,IAAUC,YAAa,eACrDC,SAAU,CAACC,IAASX,MAE/B,6BACI,iDAQDf,I,QC1BA2B,EAFUC,aAfD,SAACC,GACrB,MAAO,CACHzB,MAAOyB,EAAMC,YAAY1B,MACzBU,YAAae,EAAMC,YAAYhB,gBAIZ,SAACiB,GACxB,MAAO,CACHlB,QAAS,SAACC,GACNiB,EAASC,YAAqBlB,QAKjBc,CAA6C5B,GCPvDiC,EATC,SAACjD,GACb,OACI,6BACI,kBAAC,EAAD,CAAaC,QAASD,EAAMC,QAASiD,OAAQlD,EAAMkD,OAAQC,aAAcnD,EAAMmD,eAC/E,kBAAC,EAAD,Q,eCDNC,E,4LAEmB,IAAD,OACZlD,EAASmD,KAAKrD,MAAMsD,MAAMC,OAAOrD,OAChCA,IACDA,EAASmD,KAAKrD,MAAMwD,mBAEhBH,KAAKrD,MAAMyD,QAAQC,KAAK,UAGhCL,KAAKrD,MAAM2D,eAAezD,GAC1B0D,YAAW,WACP,EAAK5D,MAAM6D,UAAU3D,KACtB,O,+BAKH,OACI,kBAAC,EAAD,iBAAamD,KAAKrD,MAAlB,CACSC,QAASoD,KAAKrD,MAAMC,QACpBiD,OAAQG,KAAKrD,MAAMkD,OACnBC,aAAcE,KAAKrD,MAAMmD,oB,GAtBflC,IAAM6C,WAoCtBC,sBACXnB,aAVkB,SAACC,GACnB,MAAQ,CACJ5C,QAAS4C,EAAMC,YAAY7C,QAC3BiD,OAAQL,EAAMC,YAAYI,OAC1BM,iBAAkBX,EAAMmB,KAAK9D,OAC7B+D,OAAQpB,EAAMmB,KAAKC,UAKE,CAACN,mBAAeE,cAAUV,mBACnDe,IAFWH,CAGbX","file":"static/js/3.45892b08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3vH3E\",\"photo\":\"ProfileInfo_photo__CQ08U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__7XXyt\",\"posts\":\"MyPosts_posts__3W5NG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__SMlIc\"};","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHook from \"./ProfileStatusWithHook\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    if (props.profile.userId === 5625) {\r\n        return (\r\n            <div>\r\n                <img\r\n                    src='https://avatars.mds.yandex.net/get-pdb/770122/200f9305-aa1c-442b-af09-227346adaedf/s1200'\r\n                    className={styles.photo}/>\r\n            </div>)\r\n    } else {\r\n        return (\r\n            <div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n    return (\r\n        <div>\r\n            <ProfileStatusWithHook status={props.status} updateStatus={props.updateStatus}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsContols\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nconst maxLength10=maxLengthCreator(10)\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                       validate={[required,maxLength10]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux=reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        setTimeout(()=>{\r\n            this.props.getStatus(userId);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n    });\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile,getStatus,updateStatus}),\r\n    withRouter\r\n)(ProfileContainer);"],"sourceRoot":""}